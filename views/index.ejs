<%- include('partials/head') %>

<body class="bg-gray-100">
    <canvas id="confetti" class="fixed w-screen h-screen top-0"></canvas>
    <main class="h-screen overflow-hidden">
        <div id="intro" class="absolute w-full h-screen bg-purple-700 sticky top-0 items-center justify-center flex">
            <div class="text-4xl text-white flex items-center gap-3">
                <div id="names-container" class="w-40 relative flex items-center justify-end text-right">
                    <span class="name absolute w-40 opacity-0 duration-500 transition-all opacity-100">Ashley</span>
                    <span class="name absolute w-40 opacity-0 duration-500 transition-all">Baby</span>
                    <span class="name absolute w-40 opacity-0 duration-500 transition-all">Sexy</span>
                    <span class="name absolute w-40 opacity-0 duration-500 transition-all">My Love</span>
                    <span class="name absolute w-40 opacity-0 duration-500 transition-all">Darling</span>
                </div>
                <span style="margin-left: -0.75rem;">, </span>
                <span>you have </span> 
                <span class="text-pink-300 text-5xl"><%= surprisesLeft %></span> 
                <span>surprise<%= surprisesLeft == 1 ? '' : 's' %> left<%= !surprisesLeft ? '...' : ' to go!' %></span>
            </div>
            <div id="arrow" class="absolute bottom-10 w-32 text-pink-300 cursor-pointer animate-bounce">
                <%- include('../public/images/cheveron-down.svg') %>
            </div>
        </div>
    
        <div id="surprises" class="w-full h-screen flex flex-wrap gap-12 p-6 justify-center overflow-auto">
            <% for(let i = 1; i <= 30; i++) { %>
                <% const s = allSurprises[i - 1] %>
                <% if (!s || (!s.viewed && !s.revealDate)) { %>
                    <div
                        class="surprise-card relative w-48 h-48 border-2 border-gray-300 rounded-lg cursor-pointer overflow-hidden upcoming"
                        onclick="handleClick(this)"
                    >
                        <div class="absolute w-full h-full text-8xl opacity-40 text-gray-500 flex items-center justify-center"><%= i %></div>
                    </div>
                <% } else { %>
                    <div
                        class="surprise-card relative w-48 h-48 border-2 border-gray-300 rounded-lg cursor-pointer overflow-hidden <%= s.viewed ? "viewed" : (s.revealDate ? "upcoming" : "") %>"
                        data-reveal-date="<%= s.revealDate %>"
                        data-id="<%= s._id %>"
                        onclick="handleClick(this)"
                    >
                        <div class="icon-container transition-all duration-1000 absolute w-full h-full text-8xl <%= s.completedAt ? "opacity-10" : "opacity-30" %> text-gray-500 flex items-center justify-center">
                            <i class="<%= s.iconClass %>"></i>
                        </div>
                        <div class="surprise-body w-full h-full relative p-2 pt-10">
                            <div class="absolute p-2 left-0 top-0 w-full flex justify-between items-center">
                                <span data-magnitude="<%= s.magnitude %>" class="magnitude rounded bg-white text-black px-2"><%= s.magnitude %></span>
                                <span class="text-sm text-gray-500"><%= i %></span>
                                <span data-variety="<%= s.variety %>" class="variety rounded bg-white text-black px-2 text-xs font-semibold tracking-wider"><%= s.variety %></span>
                            </div>
                            <h1 class="transition-all duration-1000 <%= s.viewed ? "opacity-100" : "opacity-0" %> text-lg mb-2 font-extrabold"><%= s.title %></h1>
                            <p class="transition-all duration-1000 <%= s.viewed ? "opacity-100" : "opacity-0" %>"><%= s.description %></p>
                            <% if (!s.viewed && s.revealDate) { %>
                                <div class="transition-all duration-1000 opacity-100 countdown absolute w-full text-gray-500 text-xl text-center bottom-0 left-0"></div>
                            <% } %>
                        </div>
                    </div>
                <% } %>
            <% } %>
        </div>
    </main>
</body>


<script>

    const STATE = {
        magnitudeClassLookup: {
            small: "text-xs text-emerald-400",
            medium: "text-sm text-emerald-500 font-medium",
            large: "text-md text-emerald-600 font-bold",
        },
        varietyClassLookup: {
            cute: "text-sky-500",
            romantic: "text-rose-600",
            overdue: "text-orange-400",
            sweet: "text-green-500",
            special: "text-yellow-400",
            mystery: "text-indigo-500"
        },
        timeTest: Date.now() + 5000
    }

    $(document).ready(() => {
        setInterval(() => {
            const activeName = $("#names-container .name.opacity-100");
            const nextName = activeName.next().length ? activeName.next() : $("#names-container .name").first();
            activeName.removeClass('opacity-100');
            setTimeout(() => nextName.addClass('opacity-100'), 500);
        }, 3000);

        $('.surprise-card.upcoming').each((idx, surpriseCard) => {
            window[`interval${idx}`] = setInterval(() => updateCountdown(surpriseCard, idx), 1000);
        });

        $(".magnitude").each((idx, elem) => {
            const magnitude = $(elem).data("magnitude");
            const magnitudeClass = STATE.magnitudeClassLookup[magnitude];
            $(elem).addClass(magnitudeClass);
        });
        $(".variety").each((idx, elem) => {
            const variety = $(elem).data("variety");
            const varietyClass = STATE.varietyClassLookup[variety];
            $(elem).addClass(varietyClass);
        });
    });

    $("#arrow").on('click', () => {
        const delay = 1000;
        $("#intro").slideUp(delay);
        setTimeout(() => $('main').removeClass('overflow-hidden'), delay);
    });

    function handleClick(surpriseCard) {
        console.log(surpriseCard);
        if ($(surpriseCard).hasClass('upcoming')) return handleJiggle(surpriseCard);

        if (!$(surpriseCard).hasClass('time-to-view')) return;

        const surpriseID = $(surpriseCard).data('id');

        $.ajax({
            url: `/surprises/${surpriseID}/viewed`,
            data: { viewed: true },
            method: "PUT",
            success: function(res) {
                $(surpriseCard).removeClass('time-to-view');
                var duration = 10 * 1000;
                var animationEnd = Date.now() + duration;
                var defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };

                function randomInRange(min, max) {
                return Math.random() * (max - min) + min;
                }

                var interval = setInterval(function() {
                    var timeLeft = animationEnd - Date.now();

                    if (timeLeft <= 0) {
                        return clearInterval(interval);
                    }

                    var particleCount = 50 * (timeLeft / duration);
                    // since particles fall down, start a bit higher than random
                    confetti(Object.assign({}, defaults, { particleCount, origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 } }));
                    confetti(Object.assign({}, defaults, { particleCount, origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 } }));
                }, 250);
                console.log(res);
                clearInterval(window[`jiggleInterval${surpriseID}`]);
                setTimeout(() => {
                    $(surpriseCard).find('.countdown').toggleClass('opacity-100 opacity-0');
                    setTimeout(() => {
                        $(surpriseCard).find('.icon-container').toggleClass('opacity-10 opacity-30');
                        setTimeout(() => {
                            $(surpriseCard).find('h1').toggleClass('opacity-100');
                            $(surpriseCard).find('p').toggleClass('opacity-100');
                        }, 1000)
                    }, 1000)
                }, 1000);
            },
            error: function(res) {
                console.log(res);
            },
        })
    }

    function handleJiggle(surpriseCard) {
        $(surpriseCard).addClass('jiggle');
        setTimeout(() => $(surpriseCard).removeClass('jiggle'), 1500);
    }

    
    
    function updateCountdown(surpriseCard, idx) {
        const targetDate = new Date($(surpriseCard).data('reveal-date'));
        const currentDate = new Date();
        const timeRemaining = targetDate - currentDate;
        if (isNaN(timeRemaining)) return;

        if (timeRemaining <= 0) {
            clearInterval(window[`interval${idx}`]);
            if ($(surpriseCard).hasClass('upcoming')) {
                $(surpriseCard)
                    .toggleClass('upcoming time-to-view')
                    .find('.countdown')
                    .html('Click to find out!');
                handleJiggle(surpriseCard);
                const surpriseID = $(surpriseCard).data('id');
                window[`jiggleInterval${surpriseID}`] = setInterval(() => {
                    handleJiggle(surpriseCard);
                }, 2000)
            }
        } else {
            const days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
            const hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);
            
            $(surpriseCard).find('.countdown').html(`${days}d ${hours}h ${minutes}m ${seconds}s`);
        }
    }

</script>

<%- include('partials/footer') %>